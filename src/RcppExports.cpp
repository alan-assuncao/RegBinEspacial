// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetaCpp
double lpostbetaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetaCpp
arma::vec gradbetaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetaCpp
double lpostbetaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetaCpp
arma::vec gradbetaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x, double delta);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x, delta));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetadeltaCpp
double lpostbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetadeltaCpp
arma::vec gradbetadeltaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetadeltaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetadeltaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, double delta, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP deltaSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, delta, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Fcpp
arma::vec Fcpp(arma::vec x);
RcppExport SEXP _SpatialBinReg_Fcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Fcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// lpostbetaCpp
double lpostbetaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_lpostbetaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostbetaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// gradbetaCpp
arma::vec gradbetaCpp(arma::vec theta, arma::mat y, arma::mat X);
RcppExport SEXP _SpatialBinReg_gradbetaCpp(SEXP thetaSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradbetaCpp(theta, y, X));
    return rcpp_result_gen;
END_RCPP
}
// lpostphiCpp
double lpostphiCpp(arma::vec phi, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_lpostphiCpp(SEXP phiSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(lpostphiCpp(phi, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// gradphiCpp
arma::vec gradphiCpp(arma::vec phi, arma::vec bet, arma::vec y, arma::vec X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_gradphiCpp(SEXP phiSEXP, SEXP betSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradphiCpp(phi, bet, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}
// hmcCpp
Rcpp::List hmcCpp(arma::vec theta_current, int SS, int burn, int lag, double epsilon, int LF, double epsphi, int Lphi, arma::mat M, arma::mat y, arma::mat X, arma::mat Omega);
RcppExport SEXP _SpatialBinReg_hmcCpp(SEXP theta_currentSEXP, SEXP SSSEXP, SEXP burnSEXP, SEXP lagSEXP, SEXP epsilonSEXP, SEXP LFSEXP, SEXP epsphiSEXP, SEXP LphiSEXP, SEXP MSEXP, SEXP ySEXP, SEXP XSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta_current(theta_currentSEXP);
    Rcpp::traits::input_parameter< int >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type LF(LFSEXP);
    Rcpp::traits::input_parameter< double >::type epsphi(epsphiSEXP);
    Rcpp::traits::input_parameter< int >::type Lphi(LphiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(hmcCpp(theta_current, SS, burn, lag, epsilon, LF, epsphi, Lphi, M, y, X, Omega));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 1},
    {"_SpatialBinReg_lpostbetaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetaCpp, 3},
    {"_SpatialBinReg_gradbetaCpp", (DL_FUNC) &_SpatialBinReg_gradbetaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 5},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 5},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 1},
    {"_SpatialBinReg_lpostbetaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetaCpp, 3},
    {"_SpatialBinReg_gradbetaCpp", (DL_FUNC) &_SpatialBinReg_gradbetaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 5},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 5},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 2},
    {"_SpatialBinReg_lpostbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetadeltaCpp, 3},
    {"_SpatialBinReg_gradbetadeltaCpp", (DL_FUNC) &_SpatialBinReg_gradbetadeltaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 6},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 6},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {"_SpatialBinReg_Fcpp", (DL_FUNC) &_SpatialBinReg_Fcpp, 1},
    {"_SpatialBinReg_lpostbetaCpp", (DL_FUNC) &_SpatialBinReg_lpostbetaCpp, 3},
    {"_SpatialBinReg_gradbetaCpp", (DL_FUNC) &_SpatialBinReg_gradbetaCpp, 3},
    {"_SpatialBinReg_lpostphiCpp", (DL_FUNC) &_SpatialBinReg_lpostphiCpp, 5},
    {"_SpatialBinReg_gradphiCpp", (DL_FUNC) &_SpatialBinReg_gradphiCpp, 5},
    {"_SpatialBinReg_hmcCpp", (DL_FUNC) &_SpatialBinReg_hmcCpp, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpatialBinReg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
