% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funcoes-probito-R.R
\name{gradbetadeltaProbit}
\alias{gradbetadeltaProbit}
\title{Calculo do gradiente da log-posteriori dos coeficientes de regressao \beta sob a funcao de ligacao Probito}
\usage{
${gradbetadeltaProbit}(${theta,phiinit,y, X})
}
\arguments{
\item{theta}{Um vetor de parametros; o vetor de coeficientes \beta}

\item{phiinit}{Os valores dos efeitos aleatorios espaciais \phi_is , i=1,...,n e s=1,...,m}

\item{X}{Uma matriz de delineamento}

\item{Y}{Uma matriz de respostas binarias}
}
\value{
Um vetor.
}
\description{
Uma funcao que recebe os valores dos coeficientes da regressao (\beta); a matriz de delineamento X e a matriz de respostas Y
    e calcula o gradiente da log-posteriori sob sob a funcao de ligacao Probito
}
\details{
The details of the gradbetadeltaprobit function can be found in the vignette. Users can access the vignette using \verb{vignette(package = "SpatialBinReg")}.
}
\examples{
beta1 = -0.7 ; beta2 = 0.7 # valores dos coeficientes

set.seed(1010)
   x1 = rnorm(50)
   x2 = rnorm(50)


   m=60 # quantidade de localizacoes
   X=cbind(x1,x2)
        
     betax=beta1*x1+beta2*x2

     
     Omega_sim=rgwish( n = 1, adj =W, b = m, D = S, threshold = 1e-8 ) # gerando a matriz de precisão
     
     Y=array(NA,c(50,m))
     phi=array(NA,c(50,m))
     
     for(k in 1:50)
     {
       phi[k,] = mvrnorm(1, mu = rep(0, times = m), Sigma = solve(Omega_sim))
       
       p = pnorm((betax[k]+phi[k,]),delta)
       
       Y[k,] = rbinom(m, size=1, prob=p)
     }

     
     gradbetadelatProbit(theta=c(delta,beta1,beta2),phiinit=phi,y=Y,X=X)

}
\author{
Alan Assunção
}
